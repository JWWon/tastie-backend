image: node:12.14.1-alpine

stages:
  - build
  - test
  - before-deploy
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

build:
  stage: build
  before_script:
    - npm install
  script:
    - npm run build

test:
  stage: test
  before_script:
    - npm install
  script:
    - npm run test

build-docker-image:
  stage: before-deploy
  image: docker:19.03.5-git
  services:
    - docker:19.03.5-dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - DOCKER_TAG=$([ "$CI_COMMIT_REF_NAME" == "master" ] && echo "staging-b$CI_PIPELINE_ID" || echo "production")
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$DOCKER_TAG .
    - docker push $CI_REGISTRY_IMAGE:$DOCKER_TAG
  only:
    - master

deploy-staging:
  stage: deploy
  image: coxauto/aws-ebcli
  script:
    - apk --no-cache add gettext
    - git checkout -B "$CI_BUILD_REF_NAME" "$CI_BUILD_REF"
    - cd eb
    - cat Dockerrun.aws.json.template | envsubst > Dockerrun.aws.json
    - git add Dockerrun.aws.json
    - eb deploy --staged
    - cd ../ && EXIT_STATUS=$? scripts/to_slack.sh
  variables:
    ENVIRONMENT: staging
    APP_VERSION: "staging-b$CI_PIPELINE_ID"
    GIT_STRATEGY: clone
  only:
    - master

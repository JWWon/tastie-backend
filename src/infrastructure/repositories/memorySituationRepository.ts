import { SituationRepository } from '@/domain/case/situationRepository';
import {
  CategoryType,
  SituationType,
  FoodKeywordType,
  Situation,
} from '@/entities';

const categorySituations = new Map<CategoryType, SituationType[]>([
  [
    '아침',
    [
      '아무거나',
      '테이크아웃',
      '간단하게 먹고 싶은 날',
      '해장이 필요한 날',
      '새로운 맛집 도전',
    ],
  ],
  [
    '브런치',
    [
      '아무거나',
      '다이어트중',
      '간단하게 먹고 싶은 날',
      '테이크아웃',
      '새로운 맛집 도전',
    ],
  ],
  [
    '점심',
    [
      '새로운 맛집 도전',
      '간단하게 먹고 싶은 날',
      '혼자만의 시간',
      '해장이 필요한 날',
      '테이크아웃',
      '데이트',
      '다이어트중',
      '아무거나',
    ],
  ],
  [
    '저녁',
    [
      '테이크아웃',
      '간단하게 먹고 싶은 날',
      '데이트',
      '소개팅',
      '아무거나',
      '새로운 맛집 도전',
      '다이어트중',
      '조금 어려운 자리',
      '친구들과 신나는 파티',
    ],
  ],
  [
    '카페',
    [
      '친구들과 분위기있게 보내는 시간',
      '밤샘 공부',
      '데이트',
      '자연스러운 만남을 하고픈 날',
      '혼자 조용히 공부하는 시간',
      '그룹 모임',
      '아무거나',
    ],
  ],
  ['야식', ['아무거나', '테이크아웃', '밤샘 공부', '해장이 필요한 날']],
  [
    '술자리',
    [
      '기분 전환하고 싶은 시간',
      '자연스러운 만남을 하고픈 날',
      '소개받는 자리',
      '친구들과 신나는 파티',
      '친구들과 분위기있게 보내는 시간',
      '데이트',
      '조금 어려운 자리',
      '아무거나',
    ],
  ],
]);

const situationFoodKeywords = new Map<SituationType, FoodKeywordType[]>([
  ['테이크아웃', ['테이크아웃']],
  [
    '간단하게 먹고 싶은 날',
    [
      '브리또',
      '김밥',
      '맥도날드',
      '샌드위치',
      '도넛',
      '브런치',
      '햄버거',
      '돈까스',
      '라멘',
    ],
  ],
  [
    '해장이 필요한 날',
    ['순대국', '해장국', '치즈버거', '감자탕', '쌀국수', '국밥'],
  ],
  ['새로운 맛집 도전', []],
  ['아무거나', []],
  ['다이어트중', ['샐러드', '다이어트', '서브웨이', '닥터로빈']],
  ['혼자만의 시간', ['혼밥', '컵밥', '브리또', '햄버거']],
  [
    '데이트',
    [
      '데이트',
      '수요미식회',
      '파스타',
      '화덕피자',
      '카레',
      '타이',
      '치킨',
      '레스토랑',
      '스시',
      '라멘',
      '떡볶이',
    ],
  ],
  ['소개팅', ['수요미식회', '파스타', '스테이크', '스시', '레스토랑']],
  ['조금 어려운 자리', ['회', '한우', '한정식', '뷔페', '레스토랑']],
  [
    '친구들과 신나는 파티',
    ['뷔페', '삼겹살', '치킨', '스테이크', '피자', '펍'],
  ],
  [
    '친구들과 분위기있게 보내는 시간',
    ['루프탑', '케익', '마카롱', '베이커리', '빙수', '브런치'],
  ],
  ['밤샘 공부', ['24시', '탐앤탐스']],
  ['자연스러운 만남을 하고픈 날', ['스타벅스', '할리스', '파스쿠치', '소개팅']],
  [
    '혼자 조용히 공부하는 시간',
    ['스터디', '와이파이', '콘센트', '스타벅스', '할리스', '탐앤탐스'],
  ],
  ['그룹 모임', ['단체', '와이파이', '콘센트', '스터디', '스타벅스']],
  ['기분 전환하고 싶은 시간', ['맥주', '포차', '와인', '펍']],
  ['소개받는 자리', ['수요미식회', '파스타', '스테이크', '스시', '레스토랑']],
]);

export class MemorySituationRepository implements SituationRepository {
  getSituationsByCategory(category: CategoryType): Situation[] {
    return categorySituations.get(category).map(situationType => ({
      name: situationType,
    }));
  }

  getFoodKeywordsBySituation(situation: SituationType): FoodKeywordType[] {
    const keywords = situationFoodKeywords.get(situation);
    return keywords;
  }
}
